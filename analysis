{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1OmwCHtYCy9qcf5w6j3lo7LndQsDcJUlo",
      "authorship_tag": "ABX9TyMwQqnPwxm+ZxTdrBxtE0BK",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/asiwnnath/ADPPRO/blob/main/analysis\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "Lhgok_a2LzCW"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import seaborn as sn\n",
        "import matplotlib.pyplot as plt\n",
        "import sklearn as sk\n",
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.read_csv(\"BHP.csv\")\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 782
        },
        "id": "cOIsUdfqMIhN",
        "outputId": "cdc3ca80-60c4-4afc-fcfd-0aa969150e26"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  area_type   availability                  location  \\\n",
              "0      Super built-up  Area         19-Dec  Electronic City Phase II   \n",
              "1                Plot  Area  Ready To Move          Chikka Tirupathi   \n",
              "2            Built-up  Area  Ready To Move               Uttarahalli   \n",
              "3      Super built-up  Area  Ready To Move        Lingadheeranahalli   \n",
              "4      Super built-up  Area  Ready To Move                  Kothanur   \n",
              "...                     ...            ...                       ...   \n",
              "13315        Built-up  Area  Ready To Move                Whitefield   \n",
              "13316  Super built-up  Area  Ready To Move             Richards Town   \n",
              "13317        Built-up  Area  Ready To Move     Raja Rajeshwari Nagar   \n",
              "13318  Super built-up  Area         18-Jun           Padmanabhanagar   \n",
              "13319  Super built-up  Area  Ready To Move              Doddathoguru   \n",
              "\n",
              "            size  society total_sqft  bath  balcony   price         ppsf  \\\n",
              "0          2 BHK  Coomee        1056   2.0      1.0   39.07         ppsf   \n",
              "1      4 Bedroom  Theanmp       2600   5.0      3.0  120.00  21.66666667   \n",
              "2          3 BHK      NaN       1440   2.0      3.0   62.00  23.22580645   \n",
              "3          3 BHK  Soiewre       1521   3.0      1.0   95.00  16.01052632   \n",
              "4          2 BHK      NaN       1200   2.0      1.0   51.00  23.52941176   \n",
              "...          ...      ...        ...   ...      ...     ...          ...   \n",
              "13315  5 Bedroom  ArsiaEx       3453   4.0      0.0  231.00  14.94805195   \n",
              "13316      4 BHK      NaN       3600   5.0      NaN  400.00            9   \n",
              "13317      2 BHK  Mahla T       1141   2.0      1.0   60.00  19.01666667   \n",
              "13318      4 BHK  SollyCl       4689   4.0      1.0  488.00  9.608606557   \n",
              "13319      1 BHK      NaN        550   1.0      1.0   17.00  32.35294118   \n",
              "\n",
              "       Unnamed: 10  \n",
              "0              NaN  \n",
              "1              NaN  \n",
              "2              NaN  \n",
              "3              NaN  \n",
              "4              NaN  \n",
              "...            ...  \n",
              "13315          NaN  \n",
              "13316          NaN  \n",
              "13317          NaN  \n",
              "13318          NaN  \n",
              "13319          NaN  \n",
              "\n",
              "[13320 rows x 11 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-124a519d-0809-4adb-bdde-1227179f9c85\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>area_type</th>\n",
              "      <th>availability</th>\n",
              "      <th>location</th>\n",
              "      <th>size</th>\n",
              "      <th>society</th>\n",
              "      <th>total_sqft</th>\n",
              "      <th>bath</th>\n",
              "      <th>balcony</th>\n",
              "      <th>price</th>\n",
              "      <th>ppsf</th>\n",
              "      <th>Unnamed: 10</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Super built-up  Area</td>\n",
              "      <td>19-Dec</td>\n",
              "      <td>Electronic City Phase II</td>\n",
              "      <td>2 BHK</td>\n",
              "      <td>Coomee</td>\n",
              "      <td>1056</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>39.07</td>\n",
              "      <td>ppsf</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Plot  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Chikka Tirupathi</td>\n",
              "      <td>4 Bedroom</td>\n",
              "      <td>Theanmp</td>\n",
              "      <td>2600</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>120.00</td>\n",
              "      <td>21.66666667</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Uttarahalli</td>\n",
              "      <td>3 BHK</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1440</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>62.00</td>\n",
              "      <td>23.22580645</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Super built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Lingadheeranahalli</td>\n",
              "      <td>3 BHK</td>\n",
              "      <td>Soiewre</td>\n",
              "      <td>1521</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>95.00</td>\n",
              "      <td>16.01052632</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Super built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Kothanur</td>\n",
              "      <td>2 BHK</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1200</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>51.00</td>\n",
              "      <td>23.52941176</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13315</th>\n",
              "      <td>Built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Whitefield</td>\n",
              "      <td>5 Bedroom</td>\n",
              "      <td>ArsiaEx</td>\n",
              "      <td>3453</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>231.00</td>\n",
              "      <td>14.94805195</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13316</th>\n",
              "      <td>Super built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Richards Town</td>\n",
              "      <td>4 BHK</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3600</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>400.00</td>\n",
              "      <td>9</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13317</th>\n",
              "      <td>Built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Raja Rajeshwari Nagar</td>\n",
              "      <td>2 BHK</td>\n",
              "      <td>Mahla T</td>\n",
              "      <td>1141</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>60.00</td>\n",
              "      <td>19.01666667</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13318</th>\n",
              "      <td>Super built-up  Area</td>\n",
              "      <td>18-Jun</td>\n",
              "      <td>Padmanabhanagar</td>\n",
              "      <td>4 BHK</td>\n",
              "      <td>SollyCl</td>\n",
              "      <td>4689</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>488.00</td>\n",
              "      <td>9.608606557</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13319</th>\n",
              "      <td>Super built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Doddathoguru</td>\n",
              "      <td>1 BHK</td>\n",
              "      <td>NaN</td>\n",
              "      <td>550</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>17.00</td>\n",
              "      <td>32.35294118</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>13320 rows × 11 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-124a519d-0809-4adb-bdde-1227179f9c85')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-e23250b4-1fee-4026-a904-0e408b1320a3\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e23250b4-1fee-4026-a904-0e408b1320a3')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-e23250b4-1fee-4026-a904-0e408b1320a3 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-124a519d-0809-4adb-bdde-1227179f9c85 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-124a519d-0809-4adb-bdde-1227179f9c85');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(len(df[\"ppsf\"])):\n",
        "  t=df[\"ppsf\"][i]\n",
        "  for j in t:\n",
        "    if j in in \"012345678990.\":\n",
        "      f="
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A4D1abtzMP3y",
        "outputId": "d0037ed2-8f4a-4620-91b5-d0784f236dc3"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ppsf\n",
            "ppsf\n",
            "ppsf\n",
            "ppsf\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n",
            "#VALUE!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# New Section"
      ],
      "metadata": {
        "id": "12sI2dD0O5aB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d=df[\"ppsf\"]\n",
        "# dd=df[type(df[\"ppsf\"])==type(\"a\")]\n",
        "o=0\n",
        "df[\"new\"]=\"\"\n",
        "for i in range(len(d)):\n",
        "  t=df[\"ppsf\"][i]\n",
        "  if \"#\" not in t:\n",
        "    df[\"new\"]+=df.iloc[i]\n",
        "# print(o)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 380
        },
        "id": "6bgnwMbCQP0N",
        "outputId": "2a82a740-8e74-42b0-e528-a693c42ac5f3"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-33-c12fd12e44d5>\u001b[0m in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m   \u001b[0mt\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"ppsf\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0;34m\"#\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m     \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"new\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m+=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;31m# print(o)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__iadd__\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m  12094\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__iadd__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mNDFrameT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mNDFrameT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m  12095\u001b[0m         \u001b[0;31m# error: Unsupported left operand type for + (\"Type[NDFrame]\")\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m> 12096\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_inplace_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__add__\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[operator]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m  12097\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m  12098\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__isub__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mNDFrameT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mNDFrameT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_inplace_method\u001b[0;34m(self, other, op)\u001b[0m\n\u001b[1;32m  12071\u001b[0m         \u001b[0mWrap\u001b[0m \u001b[0marithmetic\u001b[0m \u001b[0mmethod\u001b[0m \u001b[0mto\u001b[0m \u001b[0moperate\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m  12072\u001b[0m         \"\"\"\n\u001b[0;32m> 12073\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m  12074\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m  12075\u001b[0m         if (\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/ops/common.py\u001b[0m in \u001b[0;36mnew_method\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m     70\u001b[0m         \u001b[0mother\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mitem_from_zerodim\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     71\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 72\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     73\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     74\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mnew_method\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/arraylike.py\u001b[0m in \u001b[0;36m__add__\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m    100\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0munpack_zerodim_and_defer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"__add__\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    101\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__add__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 102\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_arith_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moperator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    103\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    104\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0munpack_zerodim_and_defer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"__radd__\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m_arith_method\u001b[0;34m(self, other, op)\u001b[0m\n\u001b[1;32m   6256\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6257\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_arith_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6258\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0malign_method_SERIES\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6259\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mbase\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mIndexOpsMixin\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_arith_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6260\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/ops/__init__.py\u001b[0m in \u001b[0;36malign_method_SERIES\u001b[0;34m(left, right, align_asobject)\u001b[0m\n\u001b[1;32m    165\u001b[0m                 \u001b[0mright\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobject\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    166\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 167\u001b[0;31m             \u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mright\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mleft\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0malign\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mright\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    168\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    169\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36malign\u001b[0;34m(self, other, join, axis, level, copy, fill_value, method, limit, fill_axis, broadcast_axis)\u001b[0m\n\u001b[1;32m   4859\u001b[0m         \u001b[0mbroadcast_axis\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mAxis\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4860\u001b[0m     ) -> Series:\n\u001b[0;32m-> 4861\u001b[0;31m         return super().align(\n\u001b[0m\u001b[1;32m   4862\u001b[0m             \u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4863\u001b[0m             \u001b[0mjoin\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36malign\u001b[0;34m(self, other, join, axis, level, copy, fill_value, method, limit, fill_axis, broadcast_axis)\u001b[0m\n\u001b[1;32m   9450\u001b[0m             )\n\u001b[1;32m   9451\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mABCSeries\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 9452\u001b[0;31m             return self._align_series(\n\u001b[0m\u001b[1;32m   9453\u001b[0m                 \u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   9454\u001b[0m                 \u001b[0mjoin\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_align_series\u001b[0;34m(self, other, join, axis, level, copy, fill_value, method, limit, fill_axis)\u001b[0m\n\u001b[1;32m   9557\u001b[0m                 \u001b[0mjoin_index\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlidx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mridx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   9558\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 9559\u001b[0;31m                 join_index, lidx, ridx = self.index.join(\n\u001b[0m\u001b[1;32m   9560\u001b[0m                     \u001b[0mother\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhow\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_indexers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   9561\u001b[0m                 )\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mjoin\u001b[0;34m(self, other, how, level, return_indexers, sort)\u001b[0m\n\u001b[1;32m    226\u001b[0m         \u001b[0msort\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    227\u001b[0m     ):\n\u001b[0;32m--> 228\u001b[0;31m         \u001b[0mjoin_index\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlidx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mridx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmeth\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhow\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mhow\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msort\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msort\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    229\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mreturn_indexers\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    230\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mjoin_index\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mjoin\u001b[0;34m(self, other, how, level, return_indexers, sort)\u001b[0m\n\u001b[1;32m   4651\u001b[0m             \u001b[0mthis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4652\u001b[0m             \u001b[0mother\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4653\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mthis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhow\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mhow\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_indexers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4654\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4655\u001b[0m         \u001b[0m_validate_join_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhow\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mjoin\u001b[0;34m(self, other, how, level, return_indexers, sort)\u001b[0m\n\u001b[1;32m    226\u001b[0m         \u001b[0msort\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    227\u001b[0m     ):\n\u001b[0;32m--> 228\u001b[0;31m         \u001b[0mjoin_index\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlidx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mridx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmeth\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhow\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mhow\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msort\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msort\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    229\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mreturn_indexers\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    230\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mjoin_index\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mjoin\u001b[0;34m(self, other, how, level, return_indexers, sort)\u001b[0m\n\u001b[1;32m   4684\u001b[0m                 \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4685\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4686\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_join_via_get_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhow\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msort\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4687\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4688\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mfinal\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_join_via_get_indexer\u001b[0;34m(self, other, how, sort)\u001b[0m\n\u001b[1;32m   4706\u001b[0m             \u001b[0;31m# TODO: sort=True here for backwards compat. It may\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4707\u001b[0m             \u001b[0;31m# be better to use the sort parameter passed into join\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4708\u001b[0;31m             \u001b[0mjoin_index\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munion\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4709\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4710\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0msort\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36munion\u001b[0;34m(self, other, sort)\u001b[0m\n\u001b[1;32m   3352\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_reconciled_name_object\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3353\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3354\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_union\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msort\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msort\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3355\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3356\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_wrap_setop_result\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_union\u001b[0;34m(self, other, sort)\u001b[0m\n\u001b[1;32m   3421\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_monotonic_increasing\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_monotonic_increasing\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3422\u001b[0m             \u001b[0;31m# if both are monotonic then result should already be sorted\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3423\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_maybe_try_sort\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msort\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3424\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3425\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_maybe_try_sort\u001b[0;34m(result, sort)\u001b[0m\n\u001b[1;32m   7480\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0msort\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   7481\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 7482\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0malgos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msafe_sort\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   7483\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   7484\u001b[0m             warnings.warn(\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/algorithms.py\u001b[0m in \u001b[0;36msafe_sort\u001b[0;34m(values, codes, na_sentinel, assume_unique, verify)\u001b[0m\n\u001b[1;32m   1865\u001b[0m         \u001b[0;32mand\u001b[0m \u001b[0mlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minfer_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mskipna\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"mixed-integer\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1866\u001b[0m     ):\n\u001b[0;32m-> 1867\u001b[0;31m         \u001b[0mordered\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_sort_mixed\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1868\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1869\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/algorithms.py\u001b[0m in \u001b[0;36m_sort_mixed\u001b[0;34m(values)\u001b[0m\n\u001b[1;32m   1934\u001b[0m     \u001b[0mstr_pos\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mvalues\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbool\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1935\u001b[0m     \u001b[0mnone_pos\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mx\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mvalues\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbool\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1936\u001b[0;31m     \u001b[0mnums\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msort\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mstr_pos\u001b[0m \u001b[0;34m&\u001b[0m \u001b[0;34m~\u001b[0m\u001b[0mnone_pos\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1937\u001b[0m     \u001b[0mstrs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msort\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstr_pos\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1938\u001b[0m     return np.concatenate(\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mRKBkuOdQ3aZ",
        "outputId": "d4565c2e-91ca-415b-fd2b-031992c2b3eb"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(13320, 11)"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "ApInyfYHS-Up"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "new=df[df[\"ppsf\"]!=\"#VALUE!\"]\n",
        "for i in new[\"ppsf\"]:\n",
        "  if i==\"#VALUE!\":\n",
        "    print(\"yes\")\n",
        "  else:\n",
        "    print(\"NO\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i8-UrZktRuiM",
        "outputId": "ca513300-fb01-4a0e-892a-2a0b2ed2490e"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n",
            "NO\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(len(new[\"ppsf\"])):\n",
        "  if new[\"ppsf\"][i] not in \"0123456789.\":\n",
        "    print(new['ppsf'][i])\n",
        "  # new[\"ppsf\"][i]=float(new[\"ppsf\"][i])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "0ICqlnR4S8ps",
        "outputId": "dd03e70a-e430-4cf6-ec42-9924fbb7e1e9"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ppsf\n",
            "21.66666667\n",
            "23.22580645\n",
            "16.01052632\n",
            "23.52941176\n",
            "30.78947368\n",
            "13.39215686\n",
            "5.5\n",
            "20.71146245\n",
            "2.756756757\n",
            "25.71428571\n",
            "9.440677966\n",
            "26.31578947\n",
            "27.5\n",
            "15.2027027\n",
            "15.98639456\n",
            "24.58333333\n",
            "25.66666667\n",
            "9.551724138\n",
            "22.91666667\n",
            "40\n",
            "14.3852459\n",
            "7.368421053\n",
            "17.15533981\n",
            "20.1980198\n",
            "22.32142857\n",
            "28.57142857\n",
            "19.87654321\n",
            "23.60057412\n",
            "21.80851064\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3801\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3802\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.Int64HashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.Int64HashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 30",
            "\nThe above exception was the direct cause of the following exception:\n",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-47-d476aacf2b75>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"ppsf\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m   \u001b[0;32mif\u001b[0m \u001b[0mnew\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"ppsf\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m\"0123456789.\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'ppsf'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m   \u001b[0;31m# new[\"ppsf\"][i]=float(new[\"ppsf\"][i])\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    979\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    980\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0mkey_is_scalar\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 981\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_value\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    982\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    983\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mis_hashable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m_get_value\u001b[0;34m(self, label, takeable)\u001b[0m\n\u001b[1;32m   1087\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1088\u001b[0m         \u001b[0;31m# Similar to Index.get_value, but we do not fall back to positional\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1089\u001b[0;31m         \u001b[0mloc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1090\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_values_for_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mloc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1091\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3802\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3804\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3805\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3806\u001b[0m                 \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 30"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new[\"ppsf\"]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3MntjKnYURn2",
        "outputId": "70e2e026-6473-4d1a-9277-419ef4a8a70c"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0               ppsf\n",
              "1        21.66666667\n",
              "2        23.22580645\n",
              "3        16.01052632\n",
              "4        23.52941176\n",
              "            ...     \n",
              "13315    14.94805195\n",
              "13316              9\n",
              "13317    19.01666667\n",
              "13318    9.608606557\n",
              "13319    32.35294118\n",
              "Name: ppsf, Length: 13073, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "new[\"ppsf\"]=pd.to_numeric(new[\"ppsf\"],errors=\"coerce\")\n",
        "new.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gaT_N41vU4VA",
        "outputId": "cce56d22-53d5-4ca6-b6ad-054986155ef0"
      },
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(13072, 12)"
            ]
          },
          "metadata": {},
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lw=new[\"ppsf\"].quantile(0.001)\n",
        "u=new[\"ppsf\"].quantile(0.999)\n",
        "print(lw,u)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PgI55SBLV4VA",
        "outputId": "e63e46aa-44a3-4b5f-96c3-cbb29d7d8128"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1.958622584412 80.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "t=new[(new[\"ppsf\"]>lw)|(new[\"ppsf\"]<u)]"
      ],
      "metadata": {
        "id": "81jgk8F9WWt9"
      },
      "execution_count": 70,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "t"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 782
        },
        "id": "yrEBN0vmWkUg",
        "outputId": "2a25a943-6265-40ed-eefe-69defd12a492"
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  area_type   availability               location       size  \\\n",
              "1                Plot  Area  Ready To Move       Chikka Tirupathi  4 Bedroom   \n",
              "2            Built-up  Area  Ready To Move            Uttarahalli      3 BHK   \n",
              "3      Super built-up  Area  Ready To Move     Lingadheeranahalli      3 BHK   \n",
              "4      Super built-up  Area  Ready To Move               Kothanur      2 BHK   \n",
              "5      Super built-up  Area  Ready To Move             Whitefield      2 BHK   \n",
              "...                     ...            ...                    ...        ...   \n",
              "13315        Built-up  Area  Ready To Move             Whitefield  5 Bedroom   \n",
              "13316  Super built-up  Area  Ready To Move          Richards Town      4 BHK   \n",
              "13317        Built-up  Area  Ready To Move  Raja Rajeshwari Nagar      2 BHK   \n",
              "13318  Super built-up  Area         18-Jun        Padmanabhanagar      4 BHK   \n",
              "13319  Super built-up  Area  Ready To Move           Doddathoguru      1 BHK   \n",
              "\n",
              "       society total_sqft  bath  balcony  price       ppsf  Unnamed: 10  new  \n",
              "1      Theanmp       2600   5.0      3.0  120.0  21.666667          NaN  NaN  \n",
              "2          NaN       1440   2.0      3.0   62.0  23.225806          NaN  NaN  \n",
              "3      Soiewre       1521   3.0      1.0   95.0  16.010526          NaN  NaN  \n",
              "4          NaN       1200   2.0      1.0   51.0  23.529412          NaN  NaN  \n",
              "5      DuenaTa       1170   2.0      1.0   38.0  30.789474          NaN  NaN  \n",
              "...        ...        ...   ...      ...    ...        ...          ...  ...  \n",
              "13315  ArsiaEx       3453   4.0      0.0  231.0  14.948052          NaN  NaN  \n",
              "13316      NaN       3600   5.0      NaN  400.0   9.000000          NaN  NaN  \n",
              "13317  Mahla T       1141   2.0      1.0   60.0  19.016667          NaN  NaN  \n",
              "13318  SollyCl       4689   4.0      1.0  488.0   9.608607          NaN  NaN  \n",
              "13319      NaN        550   1.0      1.0   17.0  32.352941          NaN  NaN  \n",
              "\n",
              "[13072 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-f240a6eb-7a61-4ee9-ade9-d2f551bbe8a4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>area_type</th>\n",
              "      <th>availability</th>\n",
              "      <th>location</th>\n",
              "      <th>size</th>\n",
              "      <th>society</th>\n",
              "      <th>total_sqft</th>\n",
              "      <th>bath</th>\n",
              "      <th>balcony</th>\n",
              "      <th>price</th>\n",
              "      <th>ppsf</th>\n",
              "      <th>Unnamed: 10</th>\n",
              "      <th>new</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Plot  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Chikka Tirupathi</td>\n",
              "      <td>4 Bedroom</td>\n",
              "      <td>Theanmp</td>\n",
              "      <td>2600</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>120.0</td>\n",
              "      <td>21.666667</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Uttarahalli</td>\n",
              "      <td>3 BHK</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1440</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>62.0</td>\n",
              "      <td>23.225806</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Super built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Lingadheeranahalli</td>\n",
              "      <td>3 BHK</td>\n",
              "      <td>Soiewre</td>\n",
              "      <td>1521</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>95.0</td>\n",
              "      <td>16.010526</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Super built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Kothanur</td>\n",
              "      <td>2 BHK</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1200</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>51.0</td>\n",
              "      <td>23.529412</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Super built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Whitefield</td>\n",
              "      <td>2 BHK</td>\n",
              "      <td>DuenaTa</td>\n",
              "      <td>1170</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>38.0</td>\n",
              "      <td>30.789474</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13315</th>\n",
              "      <td>Built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Whitefield</td>\n",
              "      <td>5 Bedroom</td>\n",
              "      <td>ArsiaEx</td>\n",
              "      <td>3453</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>231.0</td>\n",
              "      <td>14.948052</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13316</th>\n",
              "      <td>Super built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Richards Town</td>\n",
              "      <td>4 BHK</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3600</td>\n",
              "      <td>5.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>400.0</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13317</th>\n",
              "      <td>Built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Raja Rajeshwari Nagar</td>\n",
              "      <td>2 BHK</td>\n",
              "      <td>Mahla T</td>\n",
              "      <td>1141</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>19.016667</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13318</th>\n",
              "      <td>Super built-up  Area</td>\n",
              "      <td>18-Jun</td>\n",
              "      <td>Padmanabhanagar</td>\n",
              "      <td>4 BHK</td>\n",
              "      <td>SollyCl</td>\n",
              "      <td>4689</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>488.0</td>\n",
              "      <td>9.608607</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13319</th>\n",
              "      <td>Super built-up  Area</td>\n",
              "      <td>Ready To Move</td>\n",
              "      <td>Doddathoguru</td>\n",
              "      <td>1 BHK</td>\n",
              "      <td>NaN</td>\n",
              "      <td>550</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>32.352941</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>13072 rows × 12 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f240a6eb-7a61-4ee9-ade9-d2f551bbe8a4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-4338955b-20d2-449f-9d19-589917d64794\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4338955b-20d2-449f-9d19-589917d64794')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-4338955b-20d2-449f-9d19-589917d64794 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f240a6eb-7a61-4ee9-ade9-d2f551bbe8a4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f240a6eb-7a61-4ee9-ade9-d2f551bbe8a4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "r=t[\"ppsf\"].mean()\n",
        "s=t[\"ppsf\"].std()\n",
        "l=r-4*s\n",
        "uu=r+4*s\n",
        "ne=t[(t[\"ppsf\"]>l)|(t[\"ppsf\"]<u)]\n",
        "ne.shape,t.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FOqAKg1KWkQ4",
        "outputId": "d2860694-388d-4fd3-87b0-428d168ceb0c"
      },
      "execution_count": 77,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((13072, 12), (13072, 12))"
            ]
          },
          "metadata": {},
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sn.histplot(ne.ppsf,kde=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "qo3mQptiWkNe",
        "outputId": "772c165b-7aaa-44f1-8e3f-292fe9a415c4"
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='ppsf', ylabel='Count'>"
            ]
          },
          "metadata": {},
          "execution_count": 80
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ne[\"Z\"]=(ne[\"ppsf\"]-ne[\"ppsf\"].mean())/ne[\"ppsf\"].std()\n",
        "ne.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HR-Am2gFWkMR",
        "outputId": "8196eb6e-02c9-4970-bbfe-449be397c4cd"
      },
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(13072, 13)"
            ]
          },
          "metadata": {},
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ne1=ne[ne['Z']>0]\n",
        "ne1.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dTUXSt-nWkJ2",
        "outputId": "8529b173-0784-4d94-a708-00b1df92746b"
      },
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(6189, 13)"
            ]
          },
          "metadata": {},
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lvZlN1zqWkHd",
        "outputId": "d6d2e5b5-b190-4344-e8b6-d6f5b2964c84"
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(13320, 12)"
            ]
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "rFYbakjsWkAf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "AvBvsOvjWj9v"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}